{
    "type": "For",
    "label": "node",
    "text": "        for rel_path, data in results.items():\n            assert rel_path.endswith(\"node_metadata.json\")\n            assert \"node_swhid_without_qualifiers\" in data\n            assert \"node_metadata\" in data\n\n            node_meta = data[\"node_metadata\"]\n            found_nodes.add((node_meta[\"type\"], node_meta[\"label\"]))\n\n            # Verify that \"hello world\" exists in node text\n            assert pattern in node_meta[\"text\"]\n\n            # Independently recompute SWHID and verify\n            metadata_str = json.dumps(node_meta, sort_keys=True, ensure_ascii=False)\n            expected_swhid = Swhid.compute_content_swhid(metadata_str)\n            assert data[\"node_swhid_without_qualifiers\"] == expected_swhid",
    "lineno": 65,
    "effective_lineno": 65,
    "col_offset": 8,
    "file_swhid": "swh:1:cnt:f1a3ac9ae63413c7e3028ca66a59cfc676419d56ca07eef51db45f17199ab05c",
    "source_path": "tests/test_cli_search.py",
    "source_filename": "test_cli_search.py"
}