{
    "type": "If",
    "label": "node",
    "text": "                                    if match:\n                                        rel_path = os.path.relpath(full_path, start=Path.cwd())\n                                        metadata_str = json.dumps(metadata, sort_keys=True, ensure_ascii=False)\n                                        node_swhid_without_qualifiers = Swhid.compute_content_swhid(metadata_str)\n\n                                        # Compute fully qualified SWHID if context is available\n                                        if self.context_qualifiers and self.repo_root:\n                                            path_qual = os.path.relpath(full_path, start=self.repo_root)\n                                            node_swhid_with_qualifiers = (\n                                                f\"{node_swhid_without_qualifiers}\"\n                                                f\";anchor={self.context_qualifiers['anchor']}\"\n                                                f\";path=/{path_qual}\"\n                                            )\n                                        else:\n                                            node_swhid_with_qualifiers = None\n\n                                        # Extract named capture groups (or None)\n                                        regex_match_groups = match.groupdict() or None\n\n                                        results[rel_path] = {\n                                            \"search_text\": search_text, # either a literal or a regex pattern\n                                            \"search_used_regex\": self.use_regex,\n                                            \"search_used_unicode\": self.use_unicode,\n                                            \"search_regex_match_groups\": regex_match_groups,\n                                            \"node_swhid_without_qualifiers\": node_swhid_without_qualifiers,\n                                            \"node_swhid_with_qualifiers\": node_swhid_with_qualifiers,\n                                            \"node_metadata\": metadata\n                                        }",
    "lineno": 78,
    "effective_lineno": 78,
    "col_offset": 36,
    "file_swhid": "swh:1:cnt:2859b4782591ebc405d65df5998d21b4995fa95cc69bd30bb58dc542e1acc607",
    "source_path": "src/parsnips/searcher.py",
    "source_filename": "searcher.py"
}